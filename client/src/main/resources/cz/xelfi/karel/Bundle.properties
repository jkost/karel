#
# Karel
# Copyright (C) 2014-2015 Jaroslav Tulach <jaroslav.tulach@apidesign.org>
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, version 2 of the License.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program. Look for COPYING file in the top folder.
# If not, see http://opensource.org/licenses/GPL-2.0.
#


HARDCODED_StartText=Robot Karla is lost in a huge building, and needs help to get out. Will you help her out?
HARDCODED_StartCommand=Start!
HARDCODED_TryAgain=Try again
HARDCODED_NextRoom=Next room &raquo;
HARDCODED_Go=Go!
HARDCODED_GoHint=(run command named {0})
HARDCODED_Stop=Stop

Error_Wall=<strong>Auu!</strong> I ran into the wall!
Error_NoMarks=<strong>Error!</strong> No mark to pick up!
Error_TooManyMarks=<strong>Error!</strong> Too many marks!
Error_UnknowCommand=<strong>Error!</strong> Unknown command {0}!
Error_unknown=<strong>Error!</strong> Unknown error!

DESC_00=<p>I need your help!</p>\
        <p>I'm robot Karla, and I got lost in this building. My navigation \
        circuits are broken, so I cannot navigate properly.</p>\
        <p>Could you please use the commands, and guide me to the exit?</p>
HINT_00=Use the 'turn-left' and 'move' commands to move Karla to the exit. Note Karla cannot walk into the walls!
DESC_01=<p>Uff, thanks for helping me to get out of the room.</p>\
        <p>I am in another room now. I am afraid I'll need your help \
        to get out of not only this room, but to get through a series \
        of rooms, to get out of this building.</p>\
        <p>Also, there's a lot of interference here, I'm afraid \
        you cannot give me commands one by one anymore. I'll need you to \
        provide me a list of command I can follow.</p>\
        <p>Luckily, some of my sight is still preserved, despite the \
        interference, so it will be enough to ensure I am standing next \
        to the exit, and facing it.</p>
HINT_01=Note the exit is behind Karla. Turn her so that she faces back. Do \
        it by doing to left turn. Fill the commands in the pre-created \
        'turn-back' command, and press GO!
DESC_02=Ufff, thanks! Another room, the same task as last time - \
        can you please turn me so that I face the exit?
HINT_02=Note the exit is to the right of Karla. But, Karla does not have \
        a command to turn right, only to turn left. Turning right is the \
        same as turning left three times. Define the command so that it will turn \
        Karla left three times. Or, even better, define the command by reusing the \
        'turn-back' command from the previous room: turn right is the same as \
        turning back and then turning left.
DESC_03=<p>Ohhh, another room! Thanks for your help so far!</p>\
         <p>I am afraid the interference is getting worse. My sight is \
         very impaired now. I am sure it will get better when I get out \
         of this building. But, for now, I'm afraid I'll need you to \
         provide me instructions to reach the exit, not only to stand next to it.</p>
HINT_03=The exit is two rows ahead of Karla. Just define the command so that Karla \
        moves twice.
DESC_04=Thanks for guiding me through that room! Can you guide me \
        through this room as well?
HINT_04=This is similar to the previous room - Karla just needs to go forward. \
        The difference now is that the exit is far away. Instead of specifying \
        the move command 6 times, use the 'repeat' command to repeat the 'move' \
        command 6 times.
DESC_05=<p>Uff, that's another room behind me, thanks!</p>\
        <p>Please help he through this room as well!</p>
HINT_05=<p>In this room, Karla needs to go straight for a bit, then turn right, \
        and the go straight for a bit more. Please use the 'turn-right' command \
        that you defined before to turn right.</p>\
        You could also observe that Karla in both cases needs to go exactly \
        6 steps - we have a command for that, why not use it?</p>
DESC_06=<p>That was good, thank you for walking me through!</p>\
        <p>We've got another problem, I'm afraid: the interference is \
        more intensive across next few rooms. Would you please provide \
        me instructions that will guide me through them?</p>
HINT_06=<p>Karla needs to go straight for a bit, then turn right, \
        and the go straight for a bit more. Unlike previous cases, there are multiple \
        rooms now, and the same instructions must work for all of them. \
        Note that Karla cannot step into a wall - she could scratch herself. \
        Please use the is wall condition to walk until the wall is right \
        in front of her, and then turn. There's no need to stop at exit, \
        Karla will walk through it on her own.</p>
#DESC_07=<p>Thanks for getting me through all those rooms! seems there's another \
#        set of rooms ahead of me, and this time the exit is in the middle of room!</p>
#HINT_07=
DESC_08=<p>Thanks for getting me through all those rooms! It seems there's \
        a series of curved hallways ahead of me. This will be tricky!</p>
HINT_08=<p>We will need to use more conditions, and a loop now. Create a \
        <code>while</code> loop with a condition "is exit". Inside it, we need to \
        to the commands that will help Karla get to the exit. Note the hallways are \
        very simple - when Karla's sees a wall while heading to right (east), \
        she always need to turn left, and when she's sees a wall while heading up \
        (north), she always needs to turn right. And she never heads in any other direction.\
        So, create a program that will go straight until Karla sees a wall, and \
        then turns left is she's heading to east, and to right otherwise.
DESC_09=<p>Uh, I squeezed through the narrow hallways, thanks! But seems more hallways \
         are ahead, and this time they are not so easy!</p>
HINT_09=<p>Note this time, the hallways now go in all directions. Karla will need \
        to go both left and right, and both up and down. There are even some wider \
        parts of the hallways!</p>\
        <p>The way to get out of this maze is to walk through it with right (or left) \
        hand on the wall.</p>\
        <p>Note Karla cannot check directly if a wall is next to her on the right size, \
        she can only check if there's a wall directly in front of her in the direction \
        she is heading. But she can turn right, and look if a wall is there.</p>\
        <p>Also note that at the beginning, Karla has a wall next to her on the right.<p>\
        <p>When Karla has a wall next to her on right, and there's nothing in front of her, \
        she can make a step. And then she needs to ensure her orientation is such that \
        there is a wall on her right size. Given she just made a step when she had a \
        wall on her right, it is enough to turn right, and the turn left as long as there's \
        a wall in front of her. Then she can start from the beginning, doing a step, and \
        re-orientating so that there's a wall on her right side, until she reaches exit.</p>
DESC_10=<p>That was difficult, thanks for guiding me through! This time it seems \
        I am in the middle of a room! But, I feel this may be the last set of rooms - \
        I may be nearly out!</p>
HINT_10=<p>This time, Karla is in the middle of an empty space, and there is a maze \
        to the exit. In the previous set of rooms, Karla learned to find the exit \
        when she start with a wall on her right side (and empty space in front of her). \
        Let's build on that - learn Karla to reach that state from an empty space.</p>\
        <p>This can be simply done by walking until Karla sees a wall, and then turning left \
        as long as Karla sees a wall. Then just call the command from the previous \
        set of rooms to guide her to the exit!</p>
DESC_99=<p>Hurray, I am out now. Thanks for freeing me up!</p>\
        <p>Feel free to give me some commands to walk around!.</p>
HINT_99=

COMMAND_turn-back=turn-back
COMMAND_turn-right=turn-right
COMMAND_two-steps=two-steps
COMMAND_six-steps=six-steps
COMMAND_walk-turn-walk=walk-turn-walk
COMMAND_check-walk-turn-walk=check-walk-turn-walk
COMMAND_path-to-exit=path-to-exit
COMMAND_find-exit=find-exit
COMMAND_find-exit-from-middle=find-exit-from-middle
COMMAND_freeform=freeform